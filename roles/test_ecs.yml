# This Playbook contains test scenario for instance in classic network type
# Playbook created by : Guimin He

- name: Testing Classic network type scenarions
  hosts: localhost
  connection: local
  vars:
    # general
    alicloud_region: cn-beijing
    alicloud_zone: cn-beijing-a
    # create instance
    image: centos_6_8_64_40G_base_20170222.vhd
    type: ecs.n4.small
    instance_name: travis-ansible-instance
    description: travis-ansible-instance
    host_name: myhost
    password: pass@123
    count: 1
    allocate_public_ip: True

    internet_charge_type: PayByBandwidth
    max_bandwidth_in: 200
    max_bandwidth_out: 10

    instance_tags:
      - tag_key: create_test_1
        tag_value: '0.01'
      - tag_key: create_test_2
        tag_value: '0.02'
    instance_ids: ["i-2zefjivpiydsav3s8krg"]
    # disk interface
    disk_name: travis-ansible-instance
    disk_category: cloud_efficiency
    size: 40
    disk_tags:
      - tag_key: create_test_1
        tag_value: '0.01'
      - tag_key: create_test_2
        tag_value: '0.02'
    device: /dev/xvdb

    # User defined image
    image_name: travis-ansible-instance
    image_version: 1
    images_tags:
      - tag_key: create_test_1
        tag_value: '0.01'
      - tag_key: create_test_2
        tag_value: '0.02'
    wait: yes

    # Security Group
    sg_name: travis-ansible-instance
    inboundRules:
      - proto: tcp
        port_range: 22/22
        cidr_ip: 0.0.0.0/0
        priority: 1

      - proto: tcp
        port_range: 80/80
        cidr_ip: 0.0.0.0/0
        priority: 1

      - proto: udp
        port_range: 10988/10989
        cidr_ip: 47.89.23.33/32
        priority: 2

    outboundRules:
      - proto: tcp
        port_range: 80/80
        cidr_ip: 192.168.0.54/32
        priority: 1

      - proto: tcp
        port_range: 8080/8085
        cidr_ip: 47.89.23.33/32
        priority: 1

      - proto: udp
        port_range: 10989/10997
        cidr_ip: 47.89.23.33/32
        priority: 2

  tasks:
    - name: Creating an ECS instance
      ali_instance:
        alicloud_region: '{{ alicloud_region }}'
        alicloud_zone: '{{ alicloud_zone }}'
        image: '{{ image }}'
        type: '{{ type }}'
        instance_name: '{{ instance_name }}'
        description: '{{ description }}'
        host_name: '{{ host_name }}'
        password: '{{ password }}'
#        group_id: 'sg-2zegcq33l0yz9sknp08o'
        count: '{{ count }}'
        allocate_public_ip: '{{ allocate_public_ip }}'
        internet_charge_type: '{{ internet_charge_type }}'
        max_bandwidth_in: '{{ max_bandwidth_in }}'
        max_bandwidth_out: '{{ max_bandwidth_out }}'
        instance_tags: '{{ instance_tags }}'
      register: createinstanceresult
    - debug: var=createinstanceresult

    - name: Modifying instance attribute
      ali_instance:
        alicloud_region: '{{ alicloud_region }}'
        instance_ids: '{{ createinstanceresult["instance_ids"] }}'
        password: 'Changed123'
        host_name: 'mychangedhostname'
      register: modifyinstanceresult
    - debug: var=modifyinstanceresult
###
    - name: Creating disk
      ali_disk:
        alicloud_region: '{{ alicloud_region }}'
        alicloud_zone: '{{ alicloud_zone }}'
        disk_name: '{{ disk_name }}'
        disk_category: '{{ disk_category }}'
        description: '{{ description }}'
        size: '{{ size }}'
        disk_tags: '{{ disk_tags }}'
      register: creatediskresult
    - debug: var=creatediskresult

    - name: Attaching disk
      ali_disk:
        alicloud_region: '{{ alicloud_region }}'
        instance_id: '{{ createinstanceresult["instance_ids"][0] }}'
#        instance_id: 'i-2ze28xi2fcstau0axqag'
        disk_id: '{{ creatediskresult.disk_id }}'
#        disk_id: 'd-2ze2no3y81rlqszny17w'
        delete_with_instance: true
      register: attachingdiskresult
    - debug: var=attachingdiskresult

    - name: Detaching disk
      ali_disk:
        alicloud_region: '{{ alicloud_region }}'
        disk_id: '{{ creatediskresult.disk_id }}'
      register: detachingdiskresult
    - debug: var=detachingdiskresult

    - name: Deleting disk
      ali_disk:
        alicloud_region: '{{ alicloud_region }}'
        disk_id: '{{ creatediskresult.disk_id }}'
        state: absent
      register: deletingdiskresult
    - debug: var=deletingdiskresult

    - name: Creating security group
      ali_security_group:
        alicloud_region: '{{ alicloud_region }}'
        name: '{{ sg_name }}'
        description: '{{description}}'
#        vpc_id: vpc-2zeigz3lbz2u27gnpbaap
#        group_id: sg-2ze9hst5wjxlrgecq4og
        rules: '{{ inboundRules }}'
        rules_egress: '{{ outboundRules }}'
      register: createsgeresult
    - debug: var=createsgeresult
#
    - name: Quering security group
      alicloud_security_group:
        alicloud_region: '{{ alicloud_region }}'
#        group_id: 'sg-2zed4uaa7mzgk7yxahje'
        group_id: '{{ createsgeresult.group_id }}'
        state: list
      register: quetysgeresult
    - debug: var=quetysgeresult
#
    - name: Adding ecs instance to security group
      ali_instance:
        alicloud_region: '{{ alicloud_region }}'
        group_id: '{{ createsgeresult.group_id }}'
#        group_id: 'sg-2ze4xsw00gvnwihb7mcw'
        instance_ids: '{{ createinstanceresult["instance_ids"] }}'
#        instance_ids: '{{ instance_ids }}'
        sg_action: join
      register: joiningsgeresult
    - debug: var=joiningsgeresult

    - name: Removing ecs instance from security group
      ali_instance:
        alicloud_region: '{{ alicloud_region }}'
        group_id: '{{ createsgeresult.group_id }}'
#        group_id: 'sg-2ze4xsw00gvnwihb7mcw'
        instance_ids: '{{ createinstanceresult["instance_ids"] }}'
#        instance_ids: '{{ instance_ids }}'
        sg_action: leave
      register: leavingsgeresult
    - debug: var=leavingsgeresult

    - name: Deleting security group
      ali_security_group:
        alicloud_region: '{{ alicloud_region }}'
        group_id: '{{ createsgeresult.group_id }}'
#        group_id: 'sg-2ze4xsw00gvnwihb7mcw'
        state: absent
      register: deletesggeresult
    - debug: var=deletesggeresult

    - name: Restarting ECS instance
      ali_instance:
        alicloud_region: '{{ alicloud_region }}'
        instance_ids: '{{ createinstanceresult["instance_ids"] }}'
        state: 'restarted'
      register: restartresult
    - debug: var=restartresult

    - name: Find all instances in the specified region and instance_ids
      ali_instance_facts:
        alicloud_region: '{{ alicloud_region }}'
        alicloud_ids: '{{ createinstanceresult["instance_ids"] }}'
      register: all_instances

    - name: Find all disks in the specified region
      ali_disk_facts:
        alicloud_zone: "{{ alicloud_zone }}"
        alicloud_region: "{{ alicloud_region }}"
      register: all_disks

    - name: Find all instance types based on the specified zone and families
      ali_instance_type_facts:
        alicloud_region: "{{ alicloud_region }}"
        alicloud_zone: "{{ alicloud_zone }}"
        instance_type_families:
          - "ecs.gn5"
          - "ecs.m1"

    - name: Terminating ECS instance
      ali_instance:
        alicloud_region: '{{ alicloud_region }}'
        instance_ids: '{{ createinstanceresult["instance_ids"] }}'
        force: True
        state: 'absent'
      register: deleteresult
    - debug: var=deleteresult

